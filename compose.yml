services:
  authentication:
    build: ./back/authentication
    container_name: authentication
    ports:
      - "4000:4000"
    networks:
      - cesieats-network
    env_file:
      - ./back/authentication/.env
    depends_on:
      - mysql-db
      - mongo-db

  products:
    build: ./back/products
    container_name: products
    ports:
      - "3010:3010"
    networks:
      - cesieats-network
    env_file:
      - ./back/products/.env
    depends_on:
      - mongo-db

  menus:
    build: ./back/menus
    container_name: menus
    ports:
      - "3020:3020"
    networks:
      - cesieats-network
    env_file:
      - ./back/menus/.env
    depends_on:
      - mongo-db

  orders:
    build: ./back/orders
    container_name: orders
    ports:
      - "3030:3030"
    networks:
      - cesieats-network
    env_file:
      - ./back/orders/.env
    depends_on:
      - mongo-db

  deliveries:
    build: ./back/deliveries
    container_name: deliveries
    ports:
      - "3040:3040"
    networks:
      - cesieats-network
    env_file:
      - ./back/deliveries/.env
    depends_on:
      - mongo-db

  restaurants:
    build: ./back/restaurants
    container_name: restaurants
    ports:
      - "3050:3050"
    networks:
      - cesieats-network
    env_file:
      - ./back/restaurants/.env
    depends_on:
      - mongo-db

  mysql-db:
    image: mysql:9
    container_name: mysql-db
    ports:
      - "3306:3306"
    networks:
      - cesieats-network
    volumes:
      - mysql_data:/var/lib/mysql
    env_file:
      - .env

  mysqld-exporter:
    image: quay.io/prometheus/mysqld-exporter:v0.14.0
    container_name: mysqld-exporter
    env_file:
      - .env
    environment:
      - DATA_SOURCE_NAME=${MYSQL_USER}:${MYSQL_PASSWORD}@tcp(mysql-db:3306)/
    ports:
      - "9104:9104"
    networks:
      - cesieats-network
    depends_on:
      - mysql-db

  mongo-db:
    image: mongo:7
    container_name: mongo-db
    ports:
      - "27017:27017"
    networks:
      - cesieats-network
    volumes:
      - mongodb_data:/data/db
    env_file:
      - .env
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}

  mongodb-exporter:
    image: bitnami/mongodb-exporter:latest
    container_name: mongodb-exporter
    ports:
      - "9216:9216"
    environment:
      - MONGODB_URI=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo-db:27017
    networks:
      - cesieats-network
    depends_on:
      - mongo-db

  nginx:
    image: nginx:latest
    container_name: gateway
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "8080:8080"
    networks:
      - cesieats-network
    depends_on:
      - authentication
      - menus
      - products
      - orders
      - deliveries
      - restaurants

  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    ports:
      - "9000:9000"
      - "9010:8000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      - cesieats-network    
    restart: always

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "9020:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - cesieats-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - cesieats-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "9040:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - cesieats-network
    depends_on:
      - prometheus

networks:
  cesieats-network:

volumes:
  mysql_data:
  mongodb_data:
  portainer_data:
  grafana_data:
  prometheus_data: