events {
    worker_connections 1024;
}

http {
    server {
        listen 8080;
        server_name localhost;

        # Accueil optionnel
        location / {
            return 200 "NGINX reverse proxy actif\n";
        }

        # Routes pour le microservice Authentication
        location /api/auth/login {
            proxy_pass http://authentication:4000/api/auth/login;
        }

        location /api/auth/register {
            proxy_pass http://authentication:4000/api/auth/register;
        }

        location /api/auth/refresh-token {
            proxy_pass http://authentication:4000/api/auth/refresh-token;
        }

        location /api/auth/logout {
            proxy_pass http://authentication:4000/api/auth/logout;
        }

        # Endpoint utilisé pour l'auth_request (protection d'autres services)
        location /api/auth/authenticate {
            internal;
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI $request_uri;

            proxy_pass http://authentication:4000/api/auth/authenticate;
        }

        # Routes protégées selon les rôles
        location /api/auth/client {
            proxy_pass http://authentication:4000/api/auth/client;
        }

        location /api/auth/livreur {
            proxy_pass http://authentication:4000/api/auth/livreur;
        }

        location /api/auth/restaurateur {
            proxy_pass http://authentication:4000/api/auth/restaurateur;
        }
        location /api/auth/developer {
            proxy_pass http://authentication:4000/api/auth/developer;
        }
        # Route pour récuperer l'API Key du developer
        location /api/auth/developer/key {
            proxy_pass http://authentication:4000/api/auth/developer/key;
        }
        # Route pour regeneration de l'api key du developer
        location /api/auth/developer/regenerate {
            proxy_pass http://authentication:4000/api/auth/developer/regenerate;
        }
        location /api/auth/developer/validatekey{
            proxy_pass http://authentication:4000/api/auth/developer/validatekey;
        }
        # Route pour récuperer tout les users
        location ^~ /api/auth/users {
            proxy_pass http://authentication:4000;
        }
        # Documentation de l'Authentication
        location /api/auth/docs {
            proxy_pass http://authentication:4000/api/auth/docs;
        }
        # Routes pour le microservice Products
        location /api/products {
            proxy_pass http://products:3010/api/products;
        }
        location /api/products/ {
            proxy_pass http://products:3010/api/products/;
        }        
        # Documentation Products
        location /api/products/docs {
            proxy_pass http://products:3010/api/products/docs;
        }
        # Routes pour le microservice Menus
        location /api/menus {
            proxy_pass http://menus:3020/api/menus;
        }
        # Documentation Menus
        location /api/menus/docs {
            proxy_pass http://menus:3020/api/menus/docs;
        }        
        # Routes pour le microservice Orders
        location /api/orders {
            proxy_pass http://orders:3030/api/orders;
        }
        location /api/orders/ {
            proxy_pass http://orders:3030/api/orders/;
        }
        # Documentation de Orders
        location /api/orders/docs {
            proxy_pass http://orders:3030/api/orders/docs;
        } 
        # Routes pour le microservice Deliveries
        location /api/deliveries {
            proxy_pass http://deliveries:3040/api/deliveries;
        }
        location /api/deliveries/ {
            proxy_pass http://deliveries:3040/api/deliveries/;
        }
        # Documentation de Deliveries
        location /api/deliveries/docs {
            proxy_pass http://deliveries:3040/api/deliveries/docs;
        }    
        # Routes pour le microservice Restaurants   
        location /api/restaurants {
            proxy_pass http://restaurants:3050/api/restaurants;
        }
        location /api/restaurants/ {
            proxy_pass http://restaurants:3050/api/restaurants/;
        }
        # Documentation Restaurants
        location /api/restaurants/docs {
            proxy_pass http://restaurants:3050/api/restaurants/docs;
        }   
        # Routes pour le microservice Developer
        location /api/developer {
            proxy_pass http://developer:3060/api/developer;
        }
        location /api/developer/ {
            proxy_pass http://developer:3060/api/developer/;
        }
        location /api/developer/components {
            proxy_pass http://developer:3060/api/developer/components;
        }
        location /api/developer/components/ {
            proxy_pass http://developer:3060/api/developer/components/;
        }
        # Documentation Developer
        location /api/developer/docs {
            proxy_pass http://developer:3060/api/developer/docs;
        }
    }
}